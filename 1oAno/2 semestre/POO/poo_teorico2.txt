Se Forma for uma interface podemos criar objetos do tipo Forma. Por exemplo: 'Forma f1 = new Forma();'  False
--------------------------------------------------------------------------------------------------------------------------------------------
A classe java.util.HashSet guarda os elementos de uma forma ordenada.  False
--------------------------------------------------------------------------------------------------------------------------------------------
Um conjunto do tipo HashSet guarda a ordem de inserção dos seus elementos  False
--------------------------------------------------------------------------------------------------------------------------------------------
Um objeto do tipo Map<K,V> disponibiliza o método iterator().  False
--------------------------------------------------------------------------------------------------------------------------------------------
A interface Map (java.util.Map) estende a interface Collection (java.util.Collection), isto é, um Map é um tipo de Collection.  False
--------------------------------------------------------------------------------------------------------------------------------------------
A classe java.util.Scanner pode ser usada para ler, linha a linha, um ficheiro de texto.  True
--------------------------------------------------------------------------------------------------------------------------------------------
If c2 is a reference of type List<String>, we can use c2.forEach(System.out::println); to print all the elements of c2.   True
--------------------------------------------------------------------------------------------------------------------------------------------
The expression SomeFunction n1 = (x, y) -> x*y; is valid is SomeFunction is a funcional interface with the method void met(int n, int m);  False
--------------------------------------------------------------------------------------------------------------------------------------------
Se col for uma referência do tipo Collection<Person>, podemos usar col.stream() para obter uma stream sobre col.   True
--------------------------------------------------------------------------------------------------------------------------------------------
FileWriter carFile = new FileWriter("Cars.txt", true);
cria o objeto carFile e abre o ficheiro Cars.txt para escrita.
Se o ficheiro já existir, o seu conteúdo é apagado.   True
--------------------------------------------------------------------------------------------------------------------------------------------
We can define the following functional interface:
@FunctionalInterface
public interface Function2<T, U, V> {
    public V apply(T t, U u);
    default void count() {
        // increment counter
    }
}   True
--------------------------------------------------------------------------------------------------------------------------------------------
Map<String, Integer> m = new HashMap<>();
After the instructions
m.put("Arnaldo", 1);
m.put("Bernardo", 1);
m.put("Arnaldo", 2);
the value 2 is associated with key "Arnaldo".   True
--------------------------------------------------------------------------------------------------------------------------------------------
Collection<Character> c = new TreeSet<>();
Após as instruções
c.add('a');
c.add('b');
c.add('a');
a coleção contém duas vezes o caracter 'a'.   False
--------------------------------------------------------------------------------------------------------------------------------------------
Scanner input = new Scanner(new File("data/words.txt"));
    while (input.hasNextLine()) 
        System.out.println(input.nextLine());
    input.close(); escreve tudo?
O código seguinte escreve no terminal todo o conteúdo do ficheiro words.txt.   True
 
